name: drs

services:
  caddy:
    image: caddy:2
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      - user_api
      - survey_api

  user_api:
    build: ./user_api
    env_file: ./.env
    environment:
      FLASK_ENV: ${USER_API_FLASK_ENV:?error}
      FLASK_DEBUG: ${USER_API_FLASK_DEBUG:?error}
      FLASK_WEB_ORIGIN: ${USER_API_FLASK_WEB_ORIGIN:?error}
      FLASK_SECRET_KEY: ${USER_API_FLASK_SECRET_KEY:?error}
      FLASK_TOKEN_ISSUER: ${USER_API_FLASK_TOKEN_ISSUER:?error}
      FLASK_EMAIL_API_URL: ${USER_API_FLASK_EMAIL_API_URL:?error}
      FLASK_EMAIL_API_KEY: ${USER_API_FLASK_EMAIL_API_KEY:?error}
      FLASK_SQLALCHEMY_DATABASE_URI: ${USER_API_FLASK_SQLALCHEMY_DATABASE_URI:?error}
    ports:
      - ${USER_API_FLASK_PORT:?error}:5000
    volumes:
      - ./user_api:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health/ready"]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 3
    depends_on:
      - user_postgres
      - email_api

  survey_api:
    build: ./survey_api
    env_file: ./.env
    environment:
      FLASK_ENV: ${SURVEY_API_FLASK_ENV:?error}
      FLASK_DEBUG: ${SURVEY_API_FLASK_DEBUG:?error}
      FLASK_WEB_ORIGIN: ${SURVEY_API_FLASK_WEB_ORIGIN:?error}
      FLASK_SECRET_KEY: ${SURVEY_API_FLASK_SECRET_KEY:?error}
      FLASK_TOKEN_ISSUER: ${SURVEY_API_FLASK_TOKEN_ISSUER:?error}
      FLASK_EMAIL_API_URL: ${SURVEY_API_FLASK_EMAIL_API_URL:?error}
      FLASK_EMAIL_API_KEY: ${SURVEY_API_FLASK_EMAIL_API_KEY:?error}
      FLASK_SQLALCHEMY_DATABASE_URI: ${SURVEY_API_FLASK_SQLALCHEMY_DATABASE_URI:?error}
    ports:
      - ${SURVEY_API_FLASK_PORT:?error}:5000
    volumes:
      - ./survey_api:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health/ready"]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 3
    depends_on:
      - survey_postgres
      - email_api

  email_api:
    build: ./email_api
    env_file: ./.env
    environment:
      FLASK_ENV: ${EMAIL_API_FLASK_ENV:?error}
      FLASK_DEBUG: ${EMAIL_API_FLASK_DEBUG:?error}
      FLASK_SECRET_KEY: ${EMAIL_API_FLASK_SECRET_KEY:?error}
      FLASK_API_KEY: ${EMAIL_API_FLASK_API_KEY:?error}
    ports:
      - ${EMAIL_API_FLASK_PORT:?error}:5000
      - ${EMAIL_API_MAILPIT_PORT:?error}:8025
    volumes:
      - ./email_api:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health/ready"]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 3

  user_postgres:
    image: postgres:17
    env_file: ./.env
    environment:
      POSTGRES_USER: ${USER_POSTGRES_USER:?error}
      POSTGRES_PASSWORD: ${USER_POSTGRES_PASSWORD:?error}
      POSTGRES_DB: ${USER_POSTGRES_DB:?error}
    ports:
      - ${USER_POSTGRES_PORT:?error}:5432
    volumes:
      - user-postgres-data:/var/lib/postgresql/data

  survey_postgres:
    image: postgres:17
    env_file: ./.env
    environment:
      POSTGRES_USER: ${SURVEY_POSTGRES_USER:?error}
      POSTGRES_PASSWORD: ${SURVEY_POSTGRES_PASSWORD:?error}
      POSTGRES_DB: ${SURVEY_POSTGRES_DB:?error}
    ports:
      - ${SURVEY_POSTGRES_PORT:?error}:5432
    volumes:
      - survey-postgres-data:/var/lib/postgresql/data

volumes:
  caddy-data:
  caddy-config:
  user-postgres-data:
  survey-postgres-data:
